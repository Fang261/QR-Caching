// Generated by view binder compiler. Do not edit!
package pt.iade.joaotomas.QRCaching.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pt.iade.joaotomas.QRCaching.R;

public final class ActivitySigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final Button loginButton2;

  @NonNull
  public final ImageView logoImage2;

  @NonNull
  public final LinearLayoutCompat register;

  @NonNull
  public final EditText registerIdEdit;

  @NonNull
  public final EditText registerPwEdit;

  @NonNull
  public final EditText registerUsernameEdit;

  private ActivitySigninBinding(@NonNull ConstraintLayout rootView, @NonNull Button confirmButton,
      @NonNull Button loginButton2, @NonNull ImageView logoImage2,
      @NonNull LinearLayoutCompat register, @NonNull EditText registerIdEdit,
      @NonNull EditText registerPwEdit, @NonNull EditText registerUsernameEdit) {
    this.rootView = rootView;
    this.confirmButton = confirmButton;
    this.loginButton2 = loginButton2;
    this.logoImage2 = logoImage2;
    this.register = register;
    this.registerIdEdit = registerIdEdit;
    this.registerPwEdit = registerPwEdit;
    this.registerUsernameEdit = registerUsernameEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirm_button;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.login_button2;
      Button loginButton2 = ViewBindings.findChildViewById(rootView, id);
      if (loginButton2 == null) {
        break missingId;
      }

      id = R.id.logo_image2;
      ImageView logoImage2 = ViewBindings.findChildViewById(rootView, id);
      if (logoImage2 == null) {
        break missingId;
      }

      id = R.id.register;
      LinearLayoutCompat register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }

      id = R.id.register_id_edit;
      EditText registerIdEdit = ViewBindings.findChildViewById(rootView, id);
      if (registerIdEdit == null) {
        break missingId;
      }

      id = R.id.register_pw_edit;
      EditText registerPwEdit = ViewBindings.findChildViewById(rootView, id);
      if (registerPwEdit == null) {
        break missingId;
      }

      id = R.id.register_username_edit;
      EditText registerUsernameEdit = ViewBindings.findChildViewById(rootView, id);
      if (registerUsernameEdit == null) {
        break missingId;
      }

      return new ActivitySigninBinding((ConstraintLayout) rootView, confirmButton, loginButton2,
          logoImage2, register, registerIdEdit, registerPwEdit, registerUsernameEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
